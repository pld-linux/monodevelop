diff -Nuard monodevelop-0.5.orig/configure.in monodevelop-0.5/configure.in
--- monodevelop-0.5.orig/configure.in	2004-06-29 21:18:46.000000000 +0200
+++ monodevelop-0.5/configure.in	2004-07-04 08:44:13.292274224 +0200
@@ -12,9 +12,14 @@
 AC_PATH_PROG(MONO, mono)
 AC_PATH_PROG(MCS, mcs)
 AC_PATH_PROG(XDGMIME, update-mime-database, no)
+
 if test "x$MONO" = "x" ; then
-  AC_MSG_ERROR([Can't find "mono" in your PATH])
+  AC_PATH_PROG(MINT, mint)
+  if test "x$MINT" = "x" ; then
+	AC_MSG_ERROR([Can't find "mono" or "mint" in your PATH])
+  fi
 fi
+
 if test "x$MCS" = "x" ; then
   AC_MSG_ERROR([Can't find "mcs" in your PATH])
 fi
@@ -28,13 +33,37 @@
 fi
 
 dnl unmanaged hard dependencies
-MONO_REQUIRED_VERSION=1.0
 GNOMEVFS_REQUIRED_VERSION=2.0
 PKG_CHECK_MODULES(UNMANAGED_DEPENDENCIES,
-mono >= $MONO_REQUIRED_VERSION
 gnome-vfs-2.0 >= $GNOMEVFS_REQUIRED_VERSION
 )
 
+MONO_REQUIRED_VERSION=1.0
+PKG_CHECK_MODULES(UNMANAGED_DEPENDENCIES_MONO,mono >= $MONO_REQUIRED_VERSION, has_mono=true, has_mono=false)
+PKG_CHECK_MODULES(UNMANAGED_DEPENDENCIES_MINT,mint >= $MONO_REQUIRED_VERSION, has_mint=true, has_mint=false)
+
+if test "x$has_mono" = "xtrue"; then
+    if test `uname -s` = "Darwin"; then
+	AC_PATH_PROG(RUNTIME, mint, no)
+	AC_PATH_PROG(CSC, mcs, no)
+	LIB_PREFIX=
+	LIB_SUFFIX=.dylib
+    else
+	AC_PATH_PROG(RUNTIME, mono, no)
+	AC_PATH_PROG(CSC, mcs, no)
+	LIB_PREFIX=.so
+	LIB_SUFFIX=
+    fi
+else
+    if test "x$has_mint" = "xtrue"; then
+	AC_PATH_PROG(RUNTIME, mint, no)
+	AC_PATH_PROG(CSC, mcs, no)
+	LIB_PREFIX=.so
+	LIB_SUFFIX=
+    fi
+fi
+
+
 dnl hard dependencies
 GTKSHARP_REQUIRED_VERSION=1.0
 GTKSOURCEVIEWSHARP_REQUIRED_VERSION=0.5
diff -Nuard monodevelop-0.5.orig/monodevelop.in monodevelop-0.5/monodevelop.in
--- monodevelop-0.5.orig/monodevelop.in	2004-06-27 06:03:48.000000000 +0200
+++ monodevelop-0.5/monodevelop.in	2004-07-04 08:45:50.673470032 +0200
@@ -50,19 +50,19 @@
 
 case x$1 in
     x--profile)
-    mono --profile ./MonoDevelop.exe $@
+    @RUNTIME@ --profile ./MonoDevelop.exe $@
 	exit 0
     ;;
     x--debug)
-    mono --debug ./MonoDevelop.exe $@
+    @RUNTIME@ --debug ./MonoDevelop.exe $@
 	exit 0
     ;;
 	x--trace)
-    mono --trace ./MonoDevelop.exe $@
+    @RUNTIME@ --trace ./MonoDevelop.exe $@
 	exit 0;
 	;;
 esac
 
 # should not use --debug when we are more stable
-mono --debug ./MonoDevelop.exe $@
+@RUNTIME@ --debug ./MonoDevelop.exe $@
 
